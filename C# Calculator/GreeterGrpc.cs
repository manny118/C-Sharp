// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Greeter/protos/greeter.proto
// Original file comments:
// Code adapted from Google's Codelab example
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Com.Example.Grpc {
  /// <summary>
  /// a square root service
  /// </summary>
  public static class SquareRootService
  {
    static readonly string __ServiceName = "com.example.grpc.SquareRootService";

    static readonly Marshaller<global::Com.Example.Grpc.HelloRequest> __Marshaller_HelloRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Grpc.HelloRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Com.Example.Grpc.HelloResponse> __Marshaller_HelloResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Grpc.HelloResponse.Parser.ParseFrom);

    static readonly Method<global::Com.Example.Grpc.HelloRequest, global::Com.Example.Grpc.HelloResponse> __Method_squareRoot = new Method<global::Com.Example.Grpc.HelloRequest, global::Com.Example.Grpc.HelloResponse>(
        MethodType.Unary,
        __ServiceName,
        "squareRoot",
        __Marshaller_HelloRequest,
        __Marshaller_HelloResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Com.Example.Grpc.GreeterReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SquareRootService</summary>
    public abstract class SquareRootServiceBase
    {
      /// <summary>
      /// returns the response
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Grpc.HelloResponse> squareRoot(global::Com.Example.Grpc.HelloRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SquareRootService</summary>
    public class SquareRootServiceClient : ClientBase<SquareRootServiceClient>
    {
      /// <summary>Creates a new client for SquareRootService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SquareRootServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SquareRootService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SquareRootServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SquareRootServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SquareRootServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// returns the response
      /// </summary>
      public virtual global::Com.Example.Grpc.HelloResponse squareRoot(global::Com.Example.Grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return squareRoot(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// returns the response
      /// </summary>
      public virtual global::Com.Example.Grpc.HelloResponse squareRoot(global::Com.Example.Grpc.HelloRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_squareRoot, null, options, request);
      }
      /// <summary>
      /// returns the response
      /// </summary>
      public virtual AsyncUnaryCall<global::Com.Example.Grpc.HelloResponse> squareRootAsync(global::Com.Example.Grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return squareRootAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// returns the response
      /// </summary>
      public virtual AsyncUnaryCall<global::Com.Example.Grpc.HelloResponse> squareRootAsync(global::Com.Example.Grpc.HelloRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_squareRoot, null, options, request);
      }
      protected override SquareRootServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SquareRootServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(SquareRootServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_squareRoot, serviceImpl.squareRoot).Build();
    }

  }
}
#endregion
